@mixin flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}
@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -o-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin transition($transition) {
  -moz-transition: $transition;
  -o-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}
/* COLUMN */
@mixin column-count($count) {
  -moz-column-count:$count;
  -webkit-column-count:$count;
  column-count: $count;
}
@mixin column-gap($gap) {
  -moz-column-gap: $gap;
  -webkit-column-gap: $gap;
  column-gap: $gap;
}
@mixin column-width($width) {
  -moz-column-width: $width;
  -webkit-column-width: $width;
  column-width: $width;
}
/* COLUMN END */

@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

$breakpoints: (
"phone":        400px,
"phone-wide":   480px,
"phablet":      560px,
"tablet-small": 640px,
"tablet":       768px,
"tablet-wide":  1024px,
"desktop":      1248px,
"desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
